name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  db:
    name: Build db binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: swatinem/rust-cache@v2

      - name: Build db binary
        run: cargo build --bin db

  backend:
    name: Build pashe-backend binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: swatinem/rust-cache@v2

      - name: Build pashe-backend binary
        run: cargo build --bin pashe-backend

  frontend:
    name: Build and test pashe-frontend
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Tauri dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential \
          curl wget file libxdo-dev libssl-dev \
          libayatana-appindicator3-dev librsvg2-dev

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Slightly speeds up windows and linux builds
          targets: ${{ matrix.os == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Setup Rust cache
        uses: swatinem/rust-cache@v2

      - name: Install frontend dependencies
        run: bun install --cwd crates/pashe-frontend

      - name: Check frontend code
        run: bun --cwd crates/pashe-frontend check

      - name: Run clippy on backend code
        run: cargo clippy -p pashe-frontend

      - name: Build frontend with Tauri
        run: bun --cwd crates/pashe-frontend tauri build --no-bundle
